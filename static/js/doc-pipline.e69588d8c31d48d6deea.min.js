webpackJsonp([14],{2157:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(2224),o=n.n(a);for(var i in a)"default"!==i&&function(e){n.d(t,e,function(){return a[e]})}(i);var r=n(2293),d=n(5);var l=function(e){n(2291)},s=Object(d.a)(o.a,r.a,r.b,!1,l,null,null);t.default=s.exports},2206:function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",a=e[3];if(!a)return n;if(t&&"function"==typeof btoa){var o=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(a),i=a.sources.map(function(e){return"/*# sourceURL="+a.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var a={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(a[i]=!0)}for(o=0;o<e.length;o++){var r=e[o];"number"==typeof r[0]&&a[r[0]]||(n&&!r[2]?r[2]=n:n&&(r[2]="("+r[2]+") and ("+n+")"),t.push(r))}},t}},2207:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,o){s=n,p=o||{};var r=Object(a.a)(e,t);return h(r),function(t){for(var n=[],o=0;o<r.length;o++){var d=r[o];(l=i[d.id]).refs--,n.push(l)}for(t?h(r=Object(a.a)(e,t)):r=[],o=0;o<n.length;o++){var l;if(0===(l=n[o]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete i[l.id]}}}};var a=n(2208),o="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!o)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},r=o&&(document.head||document.getElementsByTagName("head")[0]),d=null,l=0,s=!1,c=function(){},p=null,u="data-vue-ssr-id",v="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function h(e){for(var t=0;t<e.length;t++){var n=e[t],a=i[n.id];if(a){a.refs++;for(var o=0;o<a.parts.length;o++)a.parts[o](n.parts[o]);for(;o<n.parts.length;o++)a.parts.push(m(n.parts[o]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(o=0;o<n.parts.length;o++)r.push(m(n.parts[o]));i[n.id]={id:n.id,refs:1,parts:r}}}}function f(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function m(e){var t,n,a=document.querySelector("style["+u+'~="'+e.id+'"]');if(a){if(s)return c;a.parentNode.removeChild(a)}if(v){var o=l++;a=d||(d=f()),t=b.bind(null,a,o,!1),n=b.bind(null,a,o,!0)}else a=f(),t=function(e,t){var n=t.css,a=t.media,o=t.sourceMap;a&&e.setAttribute("media",a);p.ssrId&&e.setAttribute(u,t.id);o&&(n+="\n/*# sourceURL="+o.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var _=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function b(e,t,n,a){var o=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=_(t,o);else{var i=document.createTextNode(o),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(i,r[t]):e.appendChild(i)}}},2208:function(e,t,n){"use strict";t.a=function(e,t){for(var n=[],a={},o=0;o<t.length;o++){var i=t[o],r=i[0],d=i[1],l=i[2],s=i[3],c={id:e+":"+o,css:d,media:l,sourceMap:s};a[r]?a[r].parts.push(c):n.push(a[r]={id:r,parts:[c]})}return n}},2224:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=r(n(395)),o=r(n(23)),i=r(n(257));function r(e){return e&&e.__esModule?e:{default:e}}t.default={name:"component-doc",components:{"noahv-demo0":function(){var e={name:"piplineNormalDemo",data:function(){return{pipLineNodes:[{cardSet:[{name:"卡片",description:"这是一个可以自定义内容的卡片"}]}],nodeTemplate:{cardSet:[{name:"卡片",description:"这是一个可以自定义内容的卡片"}]},cardTemplate:{name:"卡片",description:"这是一个可以自定义内容的卡片"}}},methods:{addNode:function(){this.$refs.piplineNodeRef.addNode()},getData:function(){console.log(this.$refs.piplineNodeRef.getNodeData()),this.$Message.info("请到控制台查看数据")}}};return(0,a.default)({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticClass:"pipline-wrapper"},[n("Button",{staticStyle:{"margin-bottom":"20px"},on:{click:e.addNode}},[e._v("点击添加节点")]),e._v(" "),n("Button",{staticStyle:{"margin-bottom":"20px"},on:{click:e.getData}},[e._v("获取数据")]),e._v(" "),n("NvPipline",{ref:"piplineNodeRef",attrs:{cardMax:5,data:e.pipLineNodes,nodeTemplate:e.nodeTemplate,cardTemplate:e.cardTemplate},scopedSlots:e._u([{key:"cardContent",fn:function(t){return[n("div",{staticClass:"card-body"},[n("p",[e._v("卡片名称："+e._s(t.card.name)+" ")]),e._v(" "),n("p",[e._v(e._s(t.card.description))])])]}}])})],1)])},staticRenderFns:[]},e)}(),"noahv-demo1":function(){var e={name:"piplineComplexDemo",data:function(){return{cardMax:3,nodeMax:2,nodeTitle:"步骤",cardTitle:"并行脚本",pipLineNodes:[{cardSet:[{account:"work",timeout:"600",name:"升级基础环境",description:"用于升级机器基础环境"}]}],nodeTemplate:{cardSet:[{account:"",timeout:"",name:"",description:""}]},cardTemplate:{account:"",timeout:"",name:"",description:""}}},methods:{addNode:function(){this.$refs.piplineNodeRef.addNode()},getData:function(){console.log(this.$refs.piplineNodeRef.getNodeData()),this.$Message.info("请到控制台查看数据")}}};return(0,a.default)({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("div",{staticClass:"pipline-wrapper"},[n("Button",{staticStyle:{"margin-bottom":"20px"},on:{click:e.addNode}},[e._v("点击添加步骤")]),e._v(" "),n("Button",{staticStyle:{"margin-bottom":"20px"},on:{click:e.getData}},[e._v("获取数据")]),e._v(" "),n("NvPipline",{ref:"piplineNodeRef",attrs:{cardMax:e.cardMax,nodeMax:e.nodeMax,data:e.pipLineNodes,nodeTitle:e.nodeTitle,cardTitle:e.cardTitle,nodeTemplate:e.nodeTemplate,cardTemplate:e.cardTemplate},scopedSlots:e._u([{key:"cardContent",fn:function(t){return[n("div",{staticClass:"card-body"},[n("p",[n("label",[e._v("脚本名：")]),e._v(" "),n("Input",{model:{value:t.card.name,callback:function(n){e.$set(t.card,"name",n)},expression:"slotProps.card.name"}})],1),e._v(" "),n("p",[n("label",[e._v("执行账户：")]),e._v(" "),n("Input",{model:{value:t.card.account,callback:function(n){e.$set(t.card,"account",n)},expression:"slotProps.card.account"}})],1),e._v(" "),n("p",[n("label",[e._v("超时时间(s)：")]),e._v(" "),n("Input",{model:{value:t.card.timeout,callback:function(n){e.$set(t.card,"timeout",n)},expression:"slotProps.card.timeout"}})],1),e._v(" "),n("p",[n("label",[e._v("脚本描述：")]),e._v(" "),n("Input",{model:{value:t.card.description,callback:function(n){e.$set(t.card,"description",n)},expression:"slotProps.card.description"}})],1)])]}}])})],1)])},staticRenderFns:[]},e)}()},mounted:function(){if(this.scrollEle=document.querySelector(".noahv-layout"),this.tableEle=document.querySelector(".table-of-contents"),this.scrollEle&&this.tableEle){var e=document.querySelectorAll("pre code");[].forEach.call(e,i.default.highlightBlock),this.renderAnchor(),this.$nextTick(this.goAnchor()),this.throttled=o.default.throttle(this.handleFix,100),this.scrollEle.addEventListener("scroll",this.throttled,!1),this.anchors=document.querySelectorAll(".table-of-contents a"),this.tableEle.addEventListener("click",this.anchorClick,!1)}},beforeRouteUpdate:function(e,t,n){n(),e.path===t.path&&e.hash&&this.$nextTick(this.goAnchor)},methods:{handleFix:function(e){var t=e.target.scrollTop,n=0;if(this.anchorsList&&this.anchorsList.length){o.default.find(this.anchorsList,function(e,a){var o=document.querySelector(e);if(o&&t>o.offsetTop+30)n=a;else if(o&&t<o.offsetTop+30)return!0});var a=document.querySelector(".noahv-layout-content-wrapper").offsetHeight,i=document.querySelector(".noahv-layout").offsetHeight;n!==this.anchorsList.length-1&&i+t>a+120&&(n=this.anchorsList.length-1);var r=document.querySelectorAll(".table-of-contents a.active");r.length>0&&r[0].removeAttribute("class"),this.anchors[n].setAttribute("class","active")}},anchorClick:function(e){"A"===e.target.nodeName&&this.goAnchor()},renderAnchor:function(){var e=this,t=document.querySelectorAll(".table-of-contents a"),n=location.href.split("#").splice(0,2).join("#");this.anchorsList=[],[].slice.call(t).forEach(function(t){var a=t.getAttribute("href");e.anchorsList.push(a),t.href=n+a,t.name=a})},goAnchor:function(){if(location.href.match(/#/g).length>1){var e=location.href.match(/#[^#]+$/g);if(!e)return;var t=document.querySelector(e[0]);if(!t)return;setTimeout(function(e){document.querySelector(".noahv-layout").scrollTop=t.offsetTop+30},50)}}},beforeDestroy:function(){this.scrollEle.removeEventListener("scroll",this.throttled,!1),this.tableEle.removeEventListener("click",this.anchorClick,!1)}}},2291:function(e,t,n){var a=n(2292);"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(2207).default)("7bd48dd2",a,!0,{})},2292:function(e,t,n){(e.exports=n(2206)(!1)).push([e.i,".pipline-wrapper .card-body{padding:0 5px;font-size:12px}.pipline-wrapper .card-body p{padding-left:10px}.pipline-wrapper .card-body p:not(last-child){margin-bottom:10px}.pipline-wrapper .card-body p label{width:75px;display:inline-block}.pipline-wrapper .card-body p .ivu-input-wrapper{width:185px}.pipline-wrapper .noahv-pipline .node .node-content{width:865px}.pipline-wrapper .noahv-pipline .node .node-content .add-card,.pipline-wrapper .noahv-pipline .node .node-content .card{width:260px}.pipline-wrapper .noahv-pipline .node .node-content .card-body p .ivu-input-wrapper{width:150px}",""])},2293:function(e,t,n){"use strict";n.d(t,"a",function(){return a}),n.d(t,"b",function(){return o});var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",{staticClass:"content noahv-doc pipline-doc"},[n("p"),e._m(0),n("p"),e._v(" "),n("h2",{attrs:{id:"gai-shu"}},[e._v("概述")]),e._v(" "),n("p",[e._v("流程控件，支持配置事务流程，增删节点等")]),e._v(" "),e._m(1),e._v(" "),n("br"),e._v(" "),n("br"),e._v(" "),n("h2",{attrs:{id:"ji-chu-shi-li"}},[e._v("基础示例")]),e._v(" "),n("nv-demo",[n("template",{slot:"title"},[n("p",[e._v("基础用法示例")])]),e._v(" "),n("template",{slot:"source"},[n("noahv-demo0")],1),e._v(" "),n("template",{slot:"code"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <div class="pipline-wrapper">\n        <Button @click="addNode" style="margin-bottom: 20px;">点击添加节点</Button>\n        <Button @click="getData" style="margin-bottom: 20px;">获取数据</Button>\n        <NvPipline \n            ref="piplineNodeRef"\n            :cardMax="5"\n            :data="pipLineNodes"\n            :nodeTemplate="nodeTemplate"\n            :cardTemplate="cardTemplate"\n        >\n            <template v-slot:cardContent="slotProps">\n                <div class="card-body">\n                    <p>卡片名称：{{slotProps.card.name}} </p>\n                    <p>{{slotProps.card.description}}</p>\n                </div>\n            </template>\n        </NvPipline>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \'piplineNormalDemo\',\n    data() {\n        return {\n            pipLineNodes: [\n                {\n                    cardSet: [\n                        {\n                            name: \'卡片\',\n                            description: \'这是一个可以自定义内容的卡片\'\n                        }\n                    ]\n                }\n            ],\n            nodeTemplate: {\n                cardSet: [\n                    {\n                        name: \'卡片\',\n                        description: \'这是一个可以自定义内容的卡片\'\n                    }\n                ]\n            },\n            cardTemplate: {\n                name: \'卡片\',\n                description: \'这是一个可以自定义内容的卡片\'\n            }\n        }\n    },\n    methods: {\n        addNode() {\n            this.$refs[\'piplineNodeRef\'].addNode();\n        },\n        getData() {\n            // 获取数据\n            console.log(this.$refs[\'piplineNodeRef\'].getNodeData());\n            this.$Message.info(\'请到控制台查看数据\');\n        }\n        \n    }\n};\n<\/script>\n<style lang="less">\n    .pipline-wrapper {\n        .card-body {\n            padding: 0 5px;\n            font-size: 12px;\n            p {\n                padding-left: 10px;\n            }\n            p:not(last-child){\n                margin-bottom: 10px;\n            }\n            p label {\n                width: 75px;\n                display: inline-block;\n            }\n            p .ivu-input-wrapper {\n                width: 185px;\n            }\n        }\n        .noahv-pipline .node .node-content {\n            width: 865px;\n            .add-card, .card {\n                width: 260px;\n            }\n        }\n    }\n</style>\n\n')])])])],2),n("br"),e._v(" "),n("br"),e._v(" "),n("h2",{attrs:{id:"zu-he-shi-li"}},[e._v("组合示例")]),e._v(" "),n("p",[e._v("构建一个复杂的流程组件示例")]),e._v(" "),n("nv-demo",[n("template",{slot:"title"},[n("p",[e._v("组合用法示例")])]),e._v(" "),n("template",{slot:"source"},[n("noahv-demo1")],1),e._v(" "),n("template",{slot:"code"},[n("pre",{pre:!0},[n("code",{pre:!0,attrs:{class:"html"}},[e._v('<template>\n    <div class="pipline-wrapper">\n        <Button @click="addNode" style="margin-bottom: 20px;">点击添加步骤</Button>\n        <Button @click="getData" style="margin-bottom: 20px;">获取数据</Button>\n        <NvPipline \n            ref="piplineNodeRef"\n            :cardMax="cardMax"\n            :nodeMax="nodeMax"\n            :data="pipLineNodes"\n            :nodeTitle="nodeTitle"\n            :cardTitle="cardTitle"\n            :nodeTemplate="nodeTemplate"\n            :cardTemplate="cardTemplate"\n        >\n            <template v-slot:cardContent="slotProps">\n                <div class="card-body">\n                    <p>\n                        <label>脚本名：</label>\n                        <Input v-model="slotProps.card.name" />\n                    </p>\n                    <p>\n                        <label>执行账户：</label>\n                        <Input v-model="slotProps.card.account" />\n                    </p>\n                    <p>\n                        <label>超时时间(s)：</label>\n                        <Input v-model="slotProps.card.timeout" />\n                    </p>\n                    <p>\n                        <label>脚本描述：</label>\n                        <Input v-model="slotProps.card.description"/>\n                    </p>\n                </div>\n            </template>\n        </NvPipline>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \'piplineComplexDemo\',\n    data() {\n        return {\n            cardMax: 3,\n            nodeMax: 2,\n            nodeTitle: \'步骤\',\n            cardTitle: \'并行脚本\',\n            pipLineNodes: [\n                {\n                    cardSet: [\n                        {\n                            account: \'work\',\n                            timeout: \'600\',\n                            name: \'升级基础环境\',\n                            description: \'用于升级机器基础环境\'\n                        }\n                    ]\n                }\n            ],\n            nodeTemplate: {\n                cardSet: [\n                    {\n                        account: \'\',\n                        timeout: \'\',\n                        name: \'\',\n                        description: \'\'\n                    }\n                ]\n            },\n            cardTemplate: {\n                account: \'\',\n                timeout: \'\',\n                name: \'\',\n                description: \'\'\n            }\n        }\n    },\n    methods: {\n        addNode() {\n            this.$refs[\'piplineNodeRef\'].addNode();\n        },\n        getData() {\n            // 获取数据\n            console.log(this.$refs[\'piplineNodeRef\'].getNodeData());\n            this.$Message.info(\'请到控制台查看数据\');\n        }\n        \n    }\n};\n<\/script>\n<style lang="less">\n    .pipline-wrapper {\n        .card-body {\n            padding: 0 5px;\n            font-size: 12px;\n            p {\n                padding-left: 10px;\n            }\n            p:not(last-child){\n                margin-bottom: 10px;\n            }\n            p label {\n                width: 75px;\n                display: inline-block;\n            }\n            p .ivu-input-wrapper {\n                width: 185px;\n            }\n        }\n        .noahv-pipline .node .node-content {\n            width: 865px;\n            .add-card, .card {\n                width: 260px;\n            }\n            .card-body p .ivu-input-wrapper {\n                width: 150px;\n            }\n        }\n    }\n</style>\n\n')])])])],2),n("h2",{attrs:{id:"api"}},[e._v("API")]),e._v(" "),n("h3",{attrs:{id:"props"}},[e._v("props")]),e._v(" "),e._m(2),e._v(" "),n("h3",{attrs:{id:"methods"}},[e._v("methods")]),e._v(" "),e._m(3)],1)},o=[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#gai-shu"}},[this._v("概述")])]),t("li",[t("a",{attrs:{href:"#ji-chu-shi-li"}},[this._v("基础示例")])]),t("li",[t("a",{attrs:{href:"#zu-he-shi-li"}},[this._v("组合示例")])]),t("li",[t("a",{attrs:{href:"#api"}},[this._v("API")]),t("ul",[t("li",[t("a",{attrs:{href:"#props"}},[this._v("props")])]),t("li",[t("a",{attrs:{href:"#methods"}},[this._v("methods")])])])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("支持配置流程")]),this._v(" "),t("li",[this._v("支持流程中增删节点")]),this._v(" "),t("li",[this._v("支持通过插槽自定义卡片内容")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("属性")]),e._v(" "),n("th",[e._v("说明")]),e._v(" "),n("th",[e._v("类型")]),e._v(" "),n("th",[e._v("默认值")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("data")]),e._v(" "),n("td",[e._v("节点集合数据，详见示例")]),e._v(" "),n("td",[e._v("Array")]),e._v(" "),n("td",[e._v("-")])]),e._v(" "),n("tr",[n("td",[e._v("nodeMax")]),e._v(" "),n("td",[e._v("允许添加的最大节点个数")]),e._v(" "),n("td",[e._v("Number")]),e._v(" "),n("td",[e._v("3")])]),e._v(" "),n("tr",[n("td",[e._v("cardMax")]),e._v(" "),n("td",[e._v("单个节点允许添加的最大卡片个数")]),e._v(" "),n("td",[e._v("Number")]),e._v(" "),n("td",[e._v("5")])]),e._v(" "),n("tr",[n("td",[e._v("nodeTitle")]),e._v(" "),n("td",[e._v("节点的名称前缀(最终形式为：nodeTitle + i， 如“节点1”)")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("节点")])]),e._v(" "),n("tr",[n("td",[e._v("cardTitle")]),e._v(" "),n("td",[e._v("卡片的名称前缀(cardTitle + i， 如“卡片1”)")]),e._v(" "),n("td",[e._v("String")]),e._v(" "),n("td",[e._v("卡片")])]),e._v(" "),n("tr",[n("td",[e._v("nodeTemplate")]),e._v(" "),n("td",[e._v("节点模版，新增节点时的默认数据结构，详见示列")]),e._v(" "),n("td",[e._v("Object")]),e._v(" "),n("td",[e._v("{}, 必填项")])]),e._v(" "),n("tr",[n("td",[e._v("cardTemplate")]),e._v(" "),n("td",[e._v("卡片模版，新增卡片时的默认数据结构，详见示列")]),e._v(" "),n("td",[e._v("Object")]),e._v(" "),n("td",[e._v("{}, 必填项")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("名称")]),e._v(" "),n("th",[e._v("说明")]),e._v(" "),n("th",[e._v("参数")]),e._v(" "),n("th",[e._v("返回值")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("getNodeData")]),e._v(" "),n("td",[e._v("获取节点数据")]),e._v(" "),n("td",[e._v("无")]),e._v(" "),n("td",[e._v("节点数据")])])])])}]}});