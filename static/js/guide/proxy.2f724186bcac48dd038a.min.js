webpackJsonp([30],{2199:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(2266),n=o.n(r);for(var a in r)"default"!==a&&function(e){o.d(t,e,function(){return r[e]})}(a);var c=o(2364),s=o(5),i=Object(s.a)(n.a,c.a,c.b,!1,null,null,null);t.default=i.exports},2266:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(o(23)),n=a(o(258));function a(e){return e&&e.__esModule?e:{default:e}}t.default={name:"component-doc",mounted:function(){if(this.scrollEle=document.querySelector(".noahv-layout"),this.tableEle=document.querySelector(".table-of-contents"),this.scrollEle&&this.tableEle){var e=document.querySelectorAll("pre code");[].forEach.call(e,n.default.highlightBlock),this.renderAnchor(),this.$nextTick(this.goAnchor()),this.throttled=r.default.throttle(this.handleFix,100),this.scrollEle.addEventListener("scroll",this.throttled,!1),this.anchors=document.querySelectorAll(".table-of-contents a"),this.tableEle.addEventListener("click",this.anchorClick,!1)}},beforeRouteUpdate:function(e,t,o){o(),e.path===t.path&&e.hash&&this.$nextTick(this.goAnchor)},methods:{handleFix:function(e){var t=e.target.scrollTop,o=0;if(this.anchorsList&&this.anchorsList.length){r.default.find(this.anchorsList,function(e,r){var n=document.querySelector(e);if(n&&t>n.offsetTop+30)o=r;else if(n&&t<n.offsetTop+30)return!0});var n=document.querySelector(".noahv-layout-content-wrapper").offsetHeight,a=document.querySelector(".noahv-layout").offsetHeight;o!==this.anchorsList.length-1&&a+t>n+120&&(o=this.anchorsList.length-1);var c=document.querySelectorAll(".table-of-contents a.active");c.length>0&&c[0].removeAttribute("class"),this.anchors[o].setAttribute("class","active")}},anchorClick:function(e){"A"===e.target.nodeName&&this.goAnchor()},renderAnchor:function(){var e=this,t=document.querySelectorAll(".table-of-contents a"),o=location.href.split("#").splice(0,2).join("#");this.anchorsList=[],[].slice.call(t).forEach(function(t){var r=t.getAttribute("href");e.anchorsList.push(r),t.href=o+r,t.name=r})},goAnchor:function(){if(location.href.match(/#/g).length>1){var e=location.href.match(/#[^#]+$/g);if(!e)return;var t=document.querySelector(e[0]);if(!t)return;setTimeout(function(e){document.querySelector(".noahv-layout").scrollTop=t.offsetTop+30},50)}}},beforeDestroy:function(){this.scrollEle.removeEventListener("scroll",this.throttled,!1),this.tableEle.removeEventListener("click",this.anchorClick,!1)}}},2364:function(e,t,o){"use strict";o.d(t,"a",function(){return r}),o.d(t,"b",function(){return n});var r=function(){var e=this.$createElement;this._self._c;return this._m(0)},n=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("section",{staticClass:"content noahv-doc proxy-doc"},[o("p"),o("div",{staticClass:"table-of-contents"},[o("ul",[o("li",[o("a",{attrs:{href:"#gai-shu"}},[e._v("概述")])]),o("li",[o("a",{attrs:{href:"#kua-yu-cuo-wu-jie-jue-fang-fa"}},[e._v("跨域错误解决方法")])]),o("li",[o("a",{attrs:{href:"#jie-kou-jian-quan"}},[e._v("接口鉴权")])])])]),o("p"),e._v(" "),o("h2",{attrs:{id:"gai-shu"}},[e._v("概述")]),e._v(" "),o("p",[e._v("在开发联调的时候，通过 "),o("code",[e._v("noahv start")]),e._v(" 命令启动的server和数据API不满足同源条件，所以在浏览器调用的时候会存在跨域的问题，具体表现为浏览器的调试窗口中出现如下错误：")]),e._v(" "),o("pre",[o("code",[e._v("Access to Font at 'xxx' from origin 'a' as been blocked by CORS policy:\nNo 'Access-Control-Allow-Origin' header is present on the requested resource.\n")])]),e._v(" "),o("h2",{attrs:{id:"kua-yu-cuo-wu-jie-jue-fang-fa"}},[e._v("跨域错误解决方法")]),e._v(" "),o("p",[e._v("为了解决上述问题，NoahV中引入了代理功能，可以将浏览器的的请求代理到目标server上，从而绕过浏览器同源策略的安全限制，实现跨域数据访问，只需在 "),o("code",[e._v("src/common/devProxy.js")]),e._v(" 中加入相关配置。")]),e._v(" "),o("p",[e._v("如下为示例配置:")]),e._v(" "),o("ul",[o("li",[e._v("其中target为需要将请求代理到的server，如: "),o("code",[e._v("http://b.baidu.com:9099/")])]),e._v(" "),o("li",[e._v("path为需要代理的接口路径，如需要将接口路径为 "),o("code",[e._v("http://a.baidu.com/api/")]),e._v(" 开头的请求全部代理到 "),o("code",[e._v("http://b.baidu.com:9099/")]),e._v("，只需将 path 设置为: ['/api'];")])]),e._v(" "),o("pre",[o("code",{staticClass:"language-javascript"},[e._v("proxy: {\n    path: ['/api'],\n    option: {\n        target: 'http://b.baidu.com:9099/',\n        changeOrigin: true\n    }\n}\n")])]),e._v(" "),o("p",[e._v("将上述代理配置好后使用 "),o("code",[e._v("noahv start")]),e._v(" 命令重启NoahV，就能看到请求成功。")]),e._v(" "),o("h2",{attrs:{id:"jie-kou-jian-quan"}},[e._v("接口鉴权")]),e._v(" "),o("p",[e._v("如果代理的目标地址的接口是有鉴权的，如通过内网的 "),o("code",[e._v("uuap")]),e._v(" 进行账户验证，这种情况下上述的配置还不够，因为NoahV的代理无法获得目标地址的cookie，需要手动配置或者采用host配置的方式实现跨域鉴权。")]),e._v(" "),o("p",[o("strong",[e._v("1. 通过配置hosts代理")])]),e._v(" "),o("blockquote",[o("p",[e._v("对于当前server和目标代理server只是端口不同的情况，建议采用这种方案，几乎不需要做任何操作。")])]),e._v(" "),o("p",[e._v("采用这种方式有两个条件：")]),e._v(" "),o("ul",[o("li",[e._v("1.Cookie需要尽可能的种在根域名下")]),e._v(" "),o("li",[e._v("2.NoahV启动的server必须和目标代理server在相同根域上")])]),e._v(" "),o("p",[e._v("如果当前server和目标代理server只是端口不同，上述两个条件直接满足，只需配置上述的 "),o("code",[e._v("target")]),e._v(" 和 "),o("code",[e._v("path")]),e._v(" 。")]),e._v(" "),o("p",[e._v("对于地址不同情况，假设目标代理server为: "),o("code",[e._v("a.test.baidu.com")])]),e._v(" "),o("p",[e._v("NOAHV默认的启动目录是http://localhost的，可以在 "),o("code",[e._v("/etc/hosts")]),e._v(" 文件中配置如下代理：")]),e._v(" "),o("pre",[o("code",{staticClass:"language-bash"},[e._v("127.0.0.1 b.test.baidu.com\n")])]),e._v(" "),o("p",[e._v("总之需要让NoahV启动的server和目标代理server在相同的根域上，然后在目标代理server中将cookie种到'.test.baidu.com'")]),e._v(" "),o("p",[o("strong",[e._v("2. 通过在配置中加入跨域代理相关配置")])]),e._v(" "),o("p",[e._v("这种方式是在配置中直接将目标代理server的cookie捕获，配置到代理文件中，这样每次请求到代理server的时候就会直接带上cookie。")]),e._v(" "),o("p",[e._v("访问目标代理server，打开浏览器调试窗口，在network中任选一个请求，复制 "),o("code",[e._v("Request Header")]),e._v(" 中的 "),o("code",[e._v("Cookie")]),e._v(" 内容")]),e._v(" "),o("p",[e._v("将cookie内容复制到 "),o("code",[e._v("proxy.option.headers")]),e._v(" 中，如下列示例所示：")]),e._v(" "),o("pre",[o("code",{staticClass:"language-javascript"},[e._v("proxy: {\n    path: ['/api'],\n    option: {\n        target: 'http://b.baidu.com:9099/',\n        changeOrigin: true,\n        headers: {\n            Cookie: 'sessionid=g310esj7rnxdzac863ne2hf70o2k7ak0;' //此处为从浏览器中获取的cookie信息\n        }   \n    }\n}\n")])]),e._v(" "),o("p",[e._v("如果希望配置多个目标代理server，可以使用router功能，详见"),o("a",{attrs:{href:"https://github.com/chimurai/http-proxy-middleware"}},[e._v("http-proxy-middleware")]),e._v("文档。")])])}]}});