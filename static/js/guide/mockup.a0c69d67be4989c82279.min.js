webpackJsonp([31],{2199:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=o(2266),a=o.n(n);for(var r in n)"default"!==r&&function(t){o.d(e,t,function(){return n[t]})}(r);var i=o(2364),c=o(5),l=Object(c.a)(a.a,i.a,i.b,!1,null,null,null);e.default=l.exports},2266:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=r(o(23)),a=r(o(258));function r(t){return t&&t.__esModule?t:{default:t}}e.default={name:"component-doc",mounted:function(){if(this.scrollEle=document.querySelector(".noahv-layout"),this.tableEle=document.querySelector(".table-of-contents"),this.scrollEle&&this.tableEle){var t=document.querySelectorAll("pre code");[].forEach.call(t,a.default.highlightBlock),this.renderAnchor(),this.$nextTick(this.goAnchor()),this.throttled=n.default.throttle(this.handleFix,100),this.scrollEle.addEventListener("scroll",this.throttled,!1),this.anchors=document.querySelectorAll(".table-of-contents a"),this.tableEle.addEventListener("click",this.anchorClick,!1)}},beforeRouteUpdate:function(t,e,o){o(),t.path===e.path&&t.hash&&this.$nextTick(this.goAnchor)},methods:{handleFix:function(t){var e=t.target.scrollTop,o=0;if(this.anchorsList&&this.anchorsList.length){n.default.find(this.anchorsList,function(t,n){var a=document.querySelector(t);if(a&&e>a.offsetTop+30)o=n;else if(a&&e<a.offsetTop+30)return!0});var a=document.querySelector(".noahv-layout-content-wrapper").offsetHeight,r=document.querySelector(".noahv-layout").offsetHeight;o!==this.anchorsList.length-1&&r+e>a+120&&(o=this.anchorsList.length-1);var i=document.querySelectorAll(".table-of-contents a.active");i.length>0&&i[0].removeAttribute("class"),this.anchors[o].setAttribute("class","active")}},anchorClick:function(t){"A"===t.target.nodeName&&this.goAnchor()},renderAnchor:function(){var t=this,e=document.querySelectorAll(".table-of-contents a"),o=location.href.split("#").splice(0,2).join("#");this.anchorsList=[],[].slice.call(e).forEach(function(e){var n=e.getAttribute("href");t.anchorsList.push(n),e.href=o+n,e.name=n})},goAnchor:function(){if(location.href.match(/#/g).length>1){var t=location.href.match(/#[^#]+$/g);if(!t)return;var e=document.querySelector(t[0]);if(!e)return;setTimeout(function(t){document.querySelector(".noahv-layout").scrollTop=e.offsetTop+30},50)}}},beforeDestroy:function(){this.scrollEle.removeEventListener("scroll",this.throttled,!1),this.tableEle.removeEventListener("click",this.anchorClick,!1)}}},2364:function(t,e,o){"use strict";o.d(e,"a",function(){return n}),o.d(e,"b",function(){return a});var n=function(){var t=this.$createElement;this._self._c;return this._m(0)},a=[function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("section",{staticClass:"content noahv-doc mockup-doc"},[o("p"),o("div",{staticClass:"table-of-contents"},[o("ul",[o("li",[o("a",{attrs:{href:"#gai-shu"}},[t._v("概述")])]),o("li",[o("a",{attrs:{href:"#ru-he-kai-qi-mo-ni-shu-ju-gong-neng"}},[t._v("如何开启模拟数据功能")])]),o("li",[o("a",{attrs:{href:"#ru-he-chuang-jian-mo-ni-shu-ju"}},[t._v("如何创建模拟数据")])])])]),o("p"),t._v(" "),o("h2",{attrs:{id:"gai-shu"}},[t._v("概述")]),t._v(" "),o("p",[t._v("在前后端分离的开发实践中，我们发现前端在和后端接口联调数据之前，先使用模拟数据进行开发会加快开发进度。")]),t._v(" "),o("p",[t._v("本章主要介绍如何在框架中使用模拟数据的功能，注意如果在后端接口已经准备好的情况下，也可以直接使用代理功能连接API server开发。")]),t._v(" "),o("h2",{attrs:{id:"ru-he-kai-qi-mo-ni-shu-ju-gong-neng"}},[t._v("如何开启模拟数据功能")]),t._v(" "),o("p",[t._v("框架中已经内置模拟数据的功能，只需在请求的URL中加入标识符"),o("code",[t._v("?em")]),t._v(",即为enable mockup的缩写。")]),t._v(" "),o("p",[t._v("如我们要访问"),o("code",[t._v("http://127.0.0.1:8088/#/test/list")]),t._v("页面，如果希望该页面中发起的ajax请求走模拟数据，只需在"),o("code",[t._v("#")]),t._v("号前面加上?em参数即可")]),t._v(" "),o("p",[t._v("示例：")]),t._v(" "),o("pre",[o("code",[t._v("http://127.0.0.1:8088/?em#/test/list\n")])]),t._v(" "),o("h2",{attrs:{id:"ru-he-chuang-jian-mo-ni-shu-ju"}},[t._v("如何创建模拟数据")]),t._v(" "),o("p",[t._v("在前面的章节中我们介绍了脚手架可以创建页面，同样的脚手架也可以创建模拟数据")]),t._v(" "),o("p",[t._v("运行"),o("code",[t._v("noahv create")]),t._v("命令，可以看到有个api选项，输入api之后会要求输入路径，这个路径可以保持和你代码中ajax的请求路径一致。")]),t._v(" "),o("p",[t._v("假设现在需要请求"),o("code",[t._v("/api/table")]),t._v("这个地址的模拟数据，path只需输入"),o("code",[t._v("api/table")]),t._v("即可。")]),t._v(" "),o("p",[t._v("输入完路径之后需要选择模拟数据的模板，当前主要支持三种：")]),t._v(" "),o("ul",[o("li",[t._v("1.ok 这种为通用的请求成功接口模板，数据部分可以是数组，也可以是对象")]),t._v(" "),o("li",[t._v("2.list 这种为表格分页数据接口模板，主要多了page字段信息，")]),t._v(" "),o("li",[t._v("3.fail 这种为通用的请求失败接口模板")])]),t._v(" "),o("p",[t._v("输入完类型之后，会在mockup目录下创建对应的文件，可以实时修改对应文件中的数据部分，刷新页面查看请求数据。")]),t._v(" "),o("pre",[o("code",[t._v("➜  noahv-doc git:(master) ✗ noahv create\nnoahv-cli INFO please enter <type> for `noahv create`\n? action | list | filterList | chart | form | api | test\n api\nnoahv-cli INFO please enter <path> for `noahv create`\n? <path> such as `api/table` api/table\n? ok | list | fail\n ok\n+ mockup/api/table.js\nnoahv-cli ok creat success! \n\n")])])])}]}});